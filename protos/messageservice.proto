syntax = "proto3";

service MessageService {
    rpc Register(UsernameRequest) returns (StatusCodeResponse) {}
    rpc Login(UsernameRequest) returns (LoginResponse) {}
    rpc Subscribe(UsernameRequest) returns (stream Message) {}
    rpc Search(SearchRequest) returns (SearchResponse) {}
    rpc Send(MessageRequest) returns (StatusCodeResponse) {}
    rpc Logout(UsernameRequest) returns (StatusCodeResponse) {}
    rpc Delete(UsernameRequest) returns (StatusCodeResponse) {}
}

// *** Protos used for client requests ***
// Proto used for register, login, logout, and delete
// Only a username string is required
message UsernameRequest {
    string username = 1;
}

// Proto used for search
// Only a query string, if any, is required
message SearchRequest {
    string query = 1;
}

// Proto used for send
// A sender, receiver, and message are required
message MessageRequest {
    string sender = 1;
    string recipient = 2;
    string body = 3;
}

// *** Protos used for server responses ***
// Proto used for (an already-determined) client receiving messages
// A sender and message are required
message Message {
    string sender = 1;
    string body = 2;
}

// Proto used for register, logout, and delete
// Only a status code is required
message StatusCodeResponse {
    int32 statusCode = 1;
}

// Proto used for search
// A status code and results, if any, are required
message SearchResponse {
    int32 statusCode = 1;
    repeated string results = 2;
}

// Proto used for login
// A status code and unread messages, if any, are required
message LoginResponse {
    int32 statusCode = 1;
    repeated Message messages = 2;
}